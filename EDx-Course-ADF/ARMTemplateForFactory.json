{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "EDx-Course-ADF"
		},
		"blobstore_json_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blobstore_json'"
		},
		"daily_game_data_csv_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'daily_game_data_csv'"
		},
		"dataflowstorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'dataflowstorage'"
		},
		"edxAzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'edxAzureSqlDatabase'"
		},
		"onprem_sql_adventureworks2016_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'onprem_sql_adventureworks2016'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/adf_loadDimension_onpremise')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load Dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.vDMPrep"
							},
							{
								"name": "Destination",
								"value": "adf-data//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EnglishProductCategoryName",
											"type": "String"
										},
										"sink": {
											"name": "EnglishProductCategoryName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Model",
											"type": "String"
										},
										"sink": {
											"name": "Model",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CustomerKey",
											"type": "Int32"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Age",
											"type": "Int32"
										},
										"sink": {
											"name": "Age",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "IncomeGroup",
											"type": "String"
										},
										"sink": {
											"name": "IncomeGroup",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CalendarYear",
											"type": "Int16"
										},
										"sink": {
											"name": "CalendarYear",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "FiscalYear",
											"type": "Int16"
										},
										"sink": {
											"name": "FiscalYear",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "Byte"
										},
										"sink": {
											"name": "Month",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "OrderNumber",
											"type": "String"
										},
										"sink": {
											"name": "OrderNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LineNumber",
											"type": "Byte"
										},
										"sink": {
											"name": "LineNumber",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Int16"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "Amount",
											"type": "Decimal"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "onprem_dimension_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimproductcsv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Load Dimension",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/onprem_dimension_table')]",
				"[concat(variables('factoryId'), '/datasets/dimproductcsv')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "edxAzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dimProduct"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/edxAzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowstorage1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dataflowstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dbo.vDMPrep.csv",
						"container": "adf-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EnglishProductCategoryName",
						"type": "String"
					},
					{
						"name": "Model",
						"type": "String"
					},
					{
						"name": "CustomerKey",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "IncomeGroup",
						"type": "String"
					},
					{
						"name": "CalendarYear",
						"type": "String"
					},
					{
						"name": "FiscalYear",
						"type": "String"
					},
					{
						"name": "Month",
						"type": "String"
					},
					{
						"name": "OrderNumber",
						"type": "String"
					},
					{
						"name": "LineNumber",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Amount",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dataflowstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimproductcsv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "daily_game_data_csv",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adf-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Player",
						"type": "String"
					},
					{
						"name": "Time",
						"type": "String"
					},
					{
						"name": "Points",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/daily_game_data_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onprem_dimension_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onprem_sql_adventureworks2016",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "EnglishProductCategoryName",
						"type": "nvarchar"
					},
					{
						"name": "Model",
						"type": "nvarchar"
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "Age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IncomeGroup",
						"type": "varchar"
					},
					{
						"name": "CalendarYear",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "FiscalYear",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Month",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "LineNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Quantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Amount",
						"type": "money",
						"precision": 19,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "vDMPrep"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onprem_sql_adventureworks2016')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobstore_json')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blobstore_json_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/daily_game_data_csv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('daily_game_data_csv_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowstorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('dataflowstorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/edxAzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('edxAzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/onprem_sql_adventureworks2016')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connecting with on-premise data in SQL data warehouse using self-hosted integration runtime",
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('onprem_sql_adventureworks2016_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SelfHostedIntegrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SelfHostedIntegrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SelfHostedIntegrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "dataflowstorage1",
								"type": "DatasetReference"
							},
							"name": "source1",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dimproductcsv",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "AddedAmountAfterAddingTax"
						},
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "Exists1"
						},
						{
							"name": "Union1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "\n\nsource(output(\n\t\tEnglishProductCategoryName as string,\n\t\tModel as string,\n\t\tCustomerKey as string,\n\t\tRegion as string,\n\t\tAge as string,\n\t\tIncomeGroup as string,\n\t\tCalendarYear as string,\n\t\tFiscalYear as string,\n\t\tMonth as string,\n\t\tOrderNumber as string,\n\t\tLineNumber as string,\n\t\tQuantity as string,\n\t\tAmount as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true) ~> source1\nsource1 derive(AmountwithTax = round(toFloat(Amount)*1.25)) ~> AddedAmountAfterAddingTax\nAddedAmountAfterAddingTax split(greater(toFloat(AmountwithTax), 4000),\n\tdisjoint: false) ~> ConditionalSplit1@(TaxedAmountGreaterThan4000, TaxedAmountLesserOrEqual4000)\nConditionalSplit1@TaxedAmountGreaterThan4000, ConditionalSplit1@TaxedAmountLesserOrEqual4000 exists(ConditionalSplit1@TaxedAmountGreaterThan4000@IncomeGroup == ConditionalSplit1@TaxedAmountLesserOrEqual4000@IncomeGroup,\n\tnegate:false,\n\tbroadcast: 'none')~> Exists1\nExists1, source1 union(byName: true)~> Union1\nUnion1 select(mapColumn(\n\t\tEnglishProductCategoryName,\n\t\tModel,\n\t\tCustomerKey,\n\t\tRegion,\n\t\tAge,\n\t\tIncomeGroup,\n\t\tCalendarYear,\n\t\tFiscalYear,\n\t\tMonth,\n\t\tOrderNumber,\n\t\tLineNumber,\n\t\tQuantity,\n\t\tAmount,\n\t\tAmountwithTax\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(Age),\n\tAverageByAge = sum(toFloat(Amount))/count(Amount)) ~> Aggregate1\nAggregate1 sink(input(\n\t\tPlayer as string,\n\t\tTime as string,\n\t\tPoints as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dimproductcsv')]",
				"[concat(variables('factoryId'), '/datasets/dataflowstorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "adf_loadDimension_onpremise",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 3,
						"startTime": "2019-09-20T12:35:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/adf_loadDimension_onpremise')]"
			]
		}
	]
}